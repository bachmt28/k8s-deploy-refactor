{{- /*
templates/workload.yaml
- Render Deployment | StatefulSet tùy .Values.workload.kind
- Selector dùng bộ nhãn khuyến nghị (app.kubernetes.io/name + instance)
- Pod Template dán commonLabels + podLabels; annotations từ values
- StatefulSet: spec.serviceName dùng headless nếu bật, ngược lại dùng service thường
*/ -}}

{{- $kind := (default "Deployment" .Values.workload.kind) -}}

apiVersion: apps/v1
kind: {{ $kind }}
metadata:
  name: {{ include "workload.fullname" . }}
  labels:
    {{- include "workload.commonLabels" . | nindent 4 }}
spec:
  replicas: {{ default 1 .Values.workload.replicas }}
  revisionHistoryLimit: {{ default 5 .Values.workload.revisionHistoryLimit }}

  {{- if eq $kind "Deployment" }}
  strategy:
    {{- toYaml .Values.workload.strategy | nindent 4 }}
  {{- else }}
  {{- /* StatefulSet cần serviceName; ưu tiên headless khi bật */ -}}
  serviceName: {{- if .Values.service.headlessEnabled -}}
                 {{- printf " %s" (include "workload.headlessName" .) -}}
               {{- else -}}
                 {{- printf " %s" (include "workload.serviceName" .) -}}
               {{- end }}
  updateStrategy:
    {{- toYaml .Values.workload.statefulSetUpdateStrategy | nindent 4 }}
  {{- end }}

  selector:
    matchLabels:
      {{- include "workload.selectorLabels" . | nindent 6 }}

  template:
    metadata:
      labels:
        {{- include "workload.commonLabels" . | nindent 8 }}
        {{- with .Values.workload.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- with .Values.commonAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.workload.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}

        {{- /* Auto-rollout when ConfigMap/Secret data changes */ -}}
        {{- $cm := include "workload.configChecksum" . -}}
        {{- if $cm }}
        checksum/config: {{ $cm | quote }}
        {{- end }}
        {{- $sc := include "workload.secretChecksum" . -}}
        {{- if $sc }}
        checksum/secret: {{ $sc | quote }}
        {{- end }}


    spec:
      serviceAccountName: {{ default (include \"workload.fullname\" .) .Values.serviceAccount.name }}
      {{- if hasKey .Values.workload "automountServiceAccountToken" }}
      automountServiceAccountToken: {{ .Values.workload.automountServiceAccountToken }}
      {{- end }}

      terminationGracePeriodSeconds: {{ default 30 .Values.workload.terminationGracePeriodSeconds }}

      {{- with .Values.workload.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}

      {{- with .Values.workload.dnsConfig }}
      dnsConfig:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.workload.hostAliases }}
      hostAliases:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.workload.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.workload.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.workload.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.workload.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.workload.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.workload.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- /* ===== InitContainers ===== */}}
      {{- with .Values.workload.initContainers }}
      initContainers:
        {{- range . }}
        - name: {{ .name | default "init" | quote }}
          image: "{{ required "initContainers[].image.repository is required" .image.repository }}:{{ required "initContainers[].image.tag is required" .image.tag }}"
          imagePullPolicy: {{ default "IfNotPresent" .image.pullPolicy }}
          {{- with .command }}command: {{ toYaml . | nindent 10 }}{{- end }}
          {{- with .args    }}args:    {{ toYaml . | nindent 10 }}{{- end }}
          {{- with .env     }}env:     {{ toYaml . | nindent 10 }}{{- end }}
          {{- with .envFrom }}envFrom:
            {{- tpl (toYaml .) $ | nindent 10 }}{{- end }}
          {{- with .resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- end }}
      {{- end }}

      containers:
        # ===== Main container =====
        - name: {{ include "workload.chartLabel" . }}
          {{- $imgRepo := (default "" .Values.workload.specs.image.repository) -}}
          {{- $imgName := (default .Values.chartLabel .Values.workload.specs.image.name) -}}
          {{- $imgTag  := (default "latest" .Values.workload.specs.image.tag) -}}
          image: "{{ $imgRepo }}/{{ $imgName }}:{{ $imgTag }}"
          imagePullPolicy: {{ default "IfNotPresent" .Values.workload.specs.image.pullPolicy }}

          {{- with .Values.workload.specs.command }}command: {{ toYaml . | nindent 10 }}{{- end }}
          {{- with .Values.workload.specs.args    }}args:    {{ toYaml . | nindent 10 }}{{- end }}

          {{- with .Values.workload.specs.ports }}
          ports:
            {{- toYaml . | nindent 12 }}
          {{- end }}

          {{- with .Values.workload.specs.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}

          {{- $envFrom := list -}}
          {{- with .Values.workload.specs.envFrom -}}
          {{- $envFrom = concat $envFrom . -}}
          {{- end -}}
          {{- if and .Values.secrets.enabled .Values.secrets.autoMount -}}
          {{- $envFrom = append $envFrom (dict "secretRef" (dict "name" (include "workload.secretName" $))) -}}
          {{- end -}}
          {{- if $envFrom }}
          envFrom:
            {{- toYaml $envFrom | nindent 12 }}
          {{- end }}

          {{- with .Values.workload.specs.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}

          {{- with .Values.workload.specs.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}

          {{- with .Values.workload.specs.startupProbe }}
          {{- if or .enabled (hasKey . "httpGet") (hasKey . "exec") (hasKey . "tcpSocket") }}
          startupProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}

          {{- with .Values.workload.specs.livenessProbe }}
          {{- if or .enabled (hasKey . "httpGet") (hasKey . "exec") (hasKey . "tcpSocket") }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}

          {{- with .Values.workload.specs.readinessProbe }}
          {{- if or .enabled (hasKey . "httpGet") (hasKey . "exec") (hasKey . "tcpSocket") }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}

          {{- with .Values.workload.specs.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}

        {{- /* ===== Sidecars ===== */}}
        {{- range .Values.workload.sidecars }}
        - name: {{ required "sidecars[].name is required" .name }}
          image: "{{ required "sidecars[].image.repository is required" .image.repository }}:{{ required "sidecars[].image.tag is required" .image.tag }}"
          imagePullPolicy: {{ default "IfNotPresent" .image.pullPolicy }}
          {{- with .command }}command: {{ toYaml . | nindent 10 }}{{- end }}
          {{- with .args    }}args:    {{ toYaml . | nindent 10 }}{{- end }}
          {{- with .ports   }}
          ports:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .env     }}env:     {{ toYaml . | nindent 12 }}{{- end }}
          {{- with .envFrom }}envFrom:
            {{- tpl (toYaml .) $ | nindent 12 }}{{- end }}
          {{- with .resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .livenessProbe }}
          {{- if or .enabled (hasKey . "httpGet") (hasKey . "exec") (hasKey . "tcpSocket") }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
          {{- with .readinessProbe }}
          {{- if or .enabled (hasKey . "httpGet") (hasKey . "exec") (hasKey . "tcpSocket") }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
          {{- with .startupProbe }}
          {{- if or .enabled (hasKey . "httpGet") (hasKey . "exec") (hasKey . "tcpSocket") }}
          startupProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
          {{- with .securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- end }}

      {{- with .Values.workload.volumes }}
      volumes:
        {{- tpl (toYaml .) $ | nindent 8 }}
      {{- end }}
