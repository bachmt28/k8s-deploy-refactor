# =========================
# CONTEXT / LABELS (labels only — không dùng đặt tên)
# =========================
org: ""        # ví dụ: sb | ptf | asean (optional)
site: ""       # REQUIRED nếu workload.kind = StatefulSet (labels only)
env: "live"        # REQUIRED (labels only, không giới hạn enum)
system: ""     # optional (labels only)

# =========================
# NAMING
# =========================
chartLabel: unknown   # REQUIRED - định danh workload
# fullnameOverride: ""         # để trống: chart dùng ".Release.Name + '-' + chartLabel"

# (tùy chọn) labels/annotations áp chung cho mọi tài nguyên
commonLabels: {}
commonAnnotations: {}

# =========================
# WORKLOAD MAIN
# =========================
workload:
  kind: Deployment                     # Deployment | StatefulSet
  replicas: 2
  revisionHistoryLimit: 5

  # Deployment strategy
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0

  # StatefulSet updateStrategy
  statefulSetUpdateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0

  terminationGracePeriodSeconds: 30

  # Labels/Annotations cho Pod (không ảnh hưởng selector)
  podLabels: {}
  podAnnotations: {}

  nodeSelector: {}
  tolerations: []
  affinity: {}
  topologySpreadConstraints: []   # ví dụ: phân bố theo zone/hostname

  podSecurityContext:
    runAsNonRoot: true
    fsGroup: 2000

  priorityClassName: ""
  dnsConfig: {}
  hostAliases: []
  automountServiceAccountToken: false   # khuyến nghị an toàn mặc định

  imagePullSecrets: []   # ví dụ: [{ name: nexus-repo-secret }]

  volumes:
    - name: cfg
      configMap:
        name: ""       # để trống -> template tự default: <fullname>-config
        optional: true
    - name: tmp
      emptyDir: {}

  specs:
    image:
      repository: nexus-img.seabank.com.vn   # registry hoặc repo gốc
      name: ""            # để trống -> mặc định = chartLabel
      tag: "1.0.0"
      pullPolicy: IfNotPresent

    command: []
    args: []

    env:
      - name: APP_NAME
        value: fwbase
    envFrom: []

    ports:
      - name: http
        containerPort: 8081
        protocol: TCP

    resources:
      requests:
        cpu: "1"
        memory: 1Gi
      limits:
        cpu: "2"
        memory: 2Gi

    volumeMounts:
      - name: cfg
        mountPath: /opt/config
      - name: tmp
        mountPath: /tmp

    livenessProbe: {}     # để trống -> chart không render probe
    readinessProbe: {}
    startupProbe: {}

    securityContext:
      allowPrivilegeEscalation: false
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
      capabilities:
        drop: ["ALL"]

  # Khai báo thêm container phụ
  initContainers: []
  sidecars: []

# =========================
# SERVICE
# =========================
service:
  enabled: true
  type: ClusterIP
  annotations: {}

  # Service thường
  name: ""               # để trống -> mặc định = <fullname>
  ports:
    - name: http
      port: 8081
      targetPort: 8081

  # Headless (hữu ích cho StatefulSet; template tự bỏ qua khi kind=Deployment)
  headlessEnabled: true
  headlessName: ""       # để trống -> mặc định = <fullname>-headless

# =========================
# CONFIGMAP & SECRET
# =========================
configMap:
  enabled: true
  name: ""               # để trống -> mặc định = <fullname>-config
  data: {}

secrets:
  enabled: true
  name: ""               # để trống -> mặc định = <fullname>-secret
  autoMount: true        # nếu true → tự add envFrom Secret vào main container
  stringData: {}

# =========================
# SERVICE ACCOUNT
# =========================
serviceAccount:
  create: true
  name: ""               # để trống -> mặc định = <fullname>
  annotations: {}

# =========================
# HPA
# =========================
hpa:
  enabled: false
  minReplicas: 2
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 75
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior: {}
  # ví dụ:
  # behavior:
  #   scaleUp:
  #     stabilizationWindowSeconds: 30
  #     policies:
  #       - type: Percent
  #         value: 100
  #         periodSeconds: 60
  #   scaleDown:
  #     stabilizationWindowSeconds: 300
  #     policies:
  #       - type: Percent
  #         value: 100
  #         periodSeconds: 60

# =========================
# POD DISRUPTOR BUDGET
# =========================
pdb:
  enabled: true
  minAvailable: 1

# =========================
# PERSISTENCE VOLUME CLAIM
# =========================
pvc:
  enabled: false
  # Nếu dùng PVC sẵn có → điền claimName (ưu tiên dùng claimName khi có)
  claimName: ""
  # Nếu tạo PVC mới:
  storageClassName: "standard-rwo"
  accessModes:
    - ReadWriteOnce
  labels: {}
  persistentVolumeClaim:
    requests:
      storage: 5Gi
