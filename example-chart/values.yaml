# =========================
# CONTEXT 
# =========================
org: ""        # ví dụ: sb | ptf | asean (optional)
site: ""       # REQUIRED nếu workload.kind = StatefulSet (labels only)
env: "live"    # REQUIRED (labels only, không giới hạn enum)
system: ""     # optional (labels only)
# Nhãn để match selector
# app.kubernetes.io/app: chartLabel
# app.kubernetes.io/instance: .workload.fullname
# các nhãn org, site, env, system có xuất hiện trong labels nhưng với mục đích khác, không tham gia vào match select, nếu rỗng thì không xuất hiện

# =========================
# NAMING
# =========================
chartLabel: example   # REQUIRED - định danh workload
# .Release.Name # mặc định = env-chartLabel, chạy qua jenkins pipeline sẽ ghép bằng org-site-env-system-chartLabel, trong helper cần có cơ chế chống trùng
# .workload.fullname: ""   # bằng .Release.Name nếu không có fullOverride"

# =========================
# LABELS VÀ ANNOTATION BỔ SUNG
# =========================
# (tùy chọn) labels/annotations nếu có bổ sung áp chung cho mọi tài nguyên
commonLabels: {}
commonAnnotations: {}

# =========================
# WORKLOAD MAIN
# =========================
workload:
  kind: Deployment                     # Deployment | StatefulSet
  replicas: 2
  revisionHistoryLimit: 5

  # Deployment strategy
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0

  # StatefulSet updateStrategy
  statefulSetUpdateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0

  terminationGracePeriodSeconds: 30

  # Labels/Annotations cho Pod (không ảnh hưởng selector)
  podLabels: {}
  podAnnotations: {}

  nodeSelector: {}
  tolerations: []
  affinity: {}
  topologySpreadConstraints: []   # ví dụ: phân bố theo zone/hostname

  podSecurityContext:
    runAsNonRoot: true
    fsGroup: 2000

  priorityClassName: ""
  dnsConfig: {}
  hostAliases: []
  automountServiceAccountToken: false   # khuyến nghị an toàn mặc định

  imagePullSecrets: []   # ví dụ: [{ name: nexus-repo-secret }]

  volumes:
    - name: tmp
      emptyDir: {}

  specs:
    image:
      repository: nexus-img.seabank.com.vn   # registry hoặc repo gốc
      name: ""            # để trống -> mặc định = chartLabel, điền -> overrite
      tag: 1.0.0 # tự sinh ra label version tương ứng với giá trị, ví dụ: version: 1.0.0 
      pullPolicy: IfNotPresent

    command: []
    args: []

    env:
      - { name: key1, value: value1 }
      - { name: key1, value: value2 }

    envFrom: []

    ports:
      - name: http
        containerPort: 8081
        protocol: TCP

    resources:
      requests:
        cpu: "1"
        memory: 1Gi
      limits:
        cpu: "2"
        memory: 2Gi

    volumeMounts:
      - name: tmp
        mountPath: /tmp

    livenessProbe: {}     # để trống -> chart không render probe
    readinessProbe: {}
    startupProbe: {}

    securityContext:
      allowPrivilegeEscalation: false
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
      capabilities:
        drop: ["ALL"]

  # Khai báo thêm container phụ
  initContainers: []
  sidecars: []

# =========================
# SERVICE
# =========================
service:
  enabled: true
  type: ClusterIP
  annotations: {}

  # Service thường
  name: ""               # để trống -> mặc định = <workload fullname>
  ports:
    - name: http
      port: 8081
      targetPort: 8081

  # Headless (hữu ích cho StatefulSet; template tự bỏ qua khi kind=Deployment)
  headlessEnabled: true
  headlessName: ""       # để trống -> mặc định = <workload fullname>-headless

# =========================
# CONFIGMAP & SECRET
# =========================
configMap:
  env:
    enabled: true           # true => tạo CM cho envFrom
    name: ""                # "" => <workload fullname>-env
    autoMount: true         # true => nếu user KHÔNG khai báo envFrom thủ công thì chart tự thêm envFrom CM này
    data: 
      key1: value1
      key2: value2               # dạng KV: key: value

  file:
    enabled: true           # true => tạo CM chứa các file (application.json, env.js, ...)
    name: ""                # "" => <workload fullname>-file
    data:
      app.js: | 
        123123123
        456              


# Khi ConfigMap và Secret thay đổi template workload có annotation check sum để tự động rollout restart 

secrets:
  env:
    name: ""                # "" => <workload fullname>-env
    enabled: true           # true => tạo secret, false => không tạo
    autoMount: true         # nếu true → tự add envFrom Secret vào main container
    stringData: {}
  list:
  - name: "secret1"         # required, ắt buộc điền nếu enable: true, => <workload fullname>-secret1
    enabled: true           # true => tạo secret, false => không tạo, cái này thì không có autoMount dùng thì tự điền thêm vào mục workload
    stringData: {}

  - name: "secret2"         # required, ắt buộc điền nếu enable: true, => <workload fullname>-secret2
    enabled: true           # true => tạo secret, false => không tạo, cái này thì không có autoMount dùng thì tự điền thêm vào mục workload
    stringData: {}
# =========================
# SERVICE ACCOUNT
# =========================
serviceAccount:
  create: true
  name: ""               # để trống -> mặc định = <workload fullname>
  annotations: {}

# =========================
# HPA
# =========================
hpa:
  enabled: false
  minReplicas: 2
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 75
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior: {}
  # ví dụ:
  # behavior:
  #   scaleUp:
  #     stabilizationWindowSeconds: 30
  #     policies:
  #       - type: Percent
  #         value: 100
  #         periodSeconds: 60
  #   scaleDown:
  #     stabilizationWindowSeconds: 300
  #     policies:
  #       - type: Percent
  #         value: 100
  #         periodSeconds: 60

# =========================
# POD DISRUPTOR BUDGET
# =========================
pdb:
  enabled: true
  minAvailable: 1

# =========================
# PERSISTENCE VOLUME CLAIM
# =========================
pvc:
  enabled: false
  # Nếu dùng PVC sẵn có → điền claimName (ưu tiên dùng claimName khi có)
  claimName: ""
  # Nếu tạo PVC mới:
  storageClassName: "standard-rwo"
  accessModes:
    - ReadWriteOnce
  labels: {}
  persistentVolumeClaim:
    requests:
      storage: 5Gi
